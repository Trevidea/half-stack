pipeline {
    agent any
    environment {
        // Define environment variable to store the credentials ID
        DB_CREDENTIALS_ID = 'payroll_creds'
    }
    tools {
        nodejs "node"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from the repository
                checkout scm
            }
        }
        
        stage('CMake Configure') {
            steps {
                // Configure the CMake project
                sh 'mkdir -p build && cd build && cmake ..'
            }
        }


        stage('Build Service') {
            steps {
                // Build the CMake project
                sh 'cmake --build build'
            }
        }

        stage('Deploy Service') {
            steps {
                sh 'cp /var/lib/jenkins/workspace/payroll-server/salary_slips/salaryslip.html /opt/payroll/salaryslip.html'
                sh 'pkill -9 payroll-server || true'
                // Use withCredentials block to securely access the credentials
                withCredentials([usernamePassword(credentialsId: env.DB_CREDENTIALS_ID, usernameVariable: 'DB_USERNAME', passwordVariable: 'DB_PASSWORD')]) {
                    // Execute your build steps here, where the credentials are accessible as environment variables
                    sh 'export PG_USR=$DB_USERNAME' // Example usage
                    sh 'export PG_PWD=$DB_PASSWORD' // Example usage
                }
                sh 'JENKINS_NODE_COOKIE=dontKillMe nohup build/bin/payroll-server > output.log 2>&1 &'
            }
        }

        stage('Build Client') {
            steps {
                // Build the CMake project
                sh 'npm install --force --prefix ./Client'
                sh 'node --max_old_space_size=8192 ./Client/node_modules/@angular/cli/bin/ng build --configuration production'
            }
        }

        stage('Deploy Client') {
            steps {
                sh 'rsync -azP /var/lib/jenkins/workspace/payroll-server/Client/dist/ag-grid/* /var/www/payroll/'
            }
        }
    }
    // post {
    //     always {
    //         // Clean up or perform any post-build actions here
    //         sh 'ls -la'
    //     }
    // }
}

